#include "messageDefaults.fcl"

services:
{
  # Always-present services; configuration optional.
  floating_point_control: { }

  scheduler:  # options block in the old system
  {
    Rethrow: ['OtherArt','StdException','Unknown','BadAlloc',
              'BadExceptionType','ProductNotFound','DictionaryNotFound',
              'InsertFailure','Configuration','LogicError','UnimplementedFeature',
              'InvalidReference','NullPointerError','NoProductSpecified','EventTimeout',
              'DataCorruption','ScheduleExecutionFailure','EventProcessorFailure',
              'FileInPathError','FileOpenError','FileReadError','FatalRootError',
              'MismatchedInputFiles','ProductDoesNotSupportViews',
              'ProductDoesNotSupportPtr','NotFound']
    # IgnoreCompletely: []
    wantSummary: true
    # wantTracer: false
    # fileMode: ""
    # handleEmptyRuns: true
    # handleEmptySubRuns: true
    # enableSigInt: true
    # unloadRootSigHandler: false
    # resetRootErrHandler: true
  }

   # These are provided by Art, but are not system services and therefore
   # need to be configured to come to life.
   Timing: { }
   SimpleMemoryCheck: { }

   user:
   {
     # user-defined, plugin services
   }
}

services.message: @local::messageDefaults

physics:
{
  producers:
  {
    m1a:
    {
      module_type: IntProducer
      ivalue: 2
    }
    m1b:
    {
      module_type: IntProducer
      ivalue: 7
    }
    m2a:
    {
      module_type: DoubleProducer
      dvalue: -1.25E-1
    }
  }

  filters:
  {
  }

  analyzers:
  {
  }

   p1: [ m1a ]
   p2: [ m1b, m2a ]
   e1: [ out1 ]
   e2: [ out2 ]

   trigger_paths: [ p1, p2 ]
   end_paths: [ e1, e2 ]
}

outputs:
{
  out1:
  {
    module_type: RootOutput
    fileName: "out1.root"
    SelectEvents: { SelectEvents: [ p1 ] }
    outputCommands: [ "drop *", "keep arttest::IntProduct_m1a_*_*" ]
  }
  out2:
  {
    module_type: RootOutput
    fileName: "out2.root"
    SelectEvents: { SelectEvents: [ p2 ] }
    outputCommands: [ "drop *",
                      "keep arttest::IntProduct_m1b_*_*",
                      "keep *_m2a_*_*" ]
  }
}

source:
{
  module_type: EmptyEvent

  # were in the global area before
  maxEvents: 20
  # maxSubRuns: 2
}

process_name: DEVEL
