#define BOOST_TEST_ALTERNATIVE_INIT_API
#include <boost/test/included/unit_test.hpp>

#include "art/Framework/Core/@ART_UT_MAIN_FUNC@.h"

using namespace boost::unit_test;

#include <cstdlib>
#include <cstring>

//____________________________________________________________________________//

void art_ut()
{
  int app_return_val  = @ART_UT_MAIN_FUNC@(framework::master_test_suite().argc,
                                           framework::master_test_suite().argv);
  BOOST_REQUIRE_EQUAL(app_return_val, 0);
}

//____________________________________________________________________________//

bool
init_unit_test_suite()
{
  framework::master_test_suite().add(BOOST_TEST_CASE(&art_ut));
  return true;
}

int main(int argc, char *argv[]) {
  char const *cmp = "-c";
  char to[] = "--config";
  for (int i = 0;
       i < argc;
       ++i) {
    if (strncmp(cmp, argv[i], 2) == 0) {
      argv[i] = to;
      break; // Done.
    }
  }
  return unit_test_main(&init_unit_test_suite, argc, argv);
}

// Local Variables:
// mode: c++
// End:
